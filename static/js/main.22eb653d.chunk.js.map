{"version":3,"sources":["Components/UserAdd.js","Components/UserEdit.js","Components/User.js","Components/MainApp.js","App.js","reportWebVitals.js","index.js"],"names":["UserEdit","props","setUserAddForm","updateData","useState","email","setEmail","password","setPassword","fullName","setFullName","telephone","setTelephone","userStatus","setUserStatus","emailValid","setEmailValid","passwordValid","setPasswordValid","telephoneValid","setTelephoneValid","emailRegExp","passwordRegExp","telephoneRegExp","className","onSubmit","e","preventDefault","validEmail","test","validPassword","validTelephone","isInvalid","localStorage","getItem","initData","JSON","stringify","id","uniqueId","trim","Date","toLocaleString","setItem","newData","parse","push","htmlFor","type","required","onChange","target","value","data","map","curr","dateChanged","User","redactState","setRedactState","dateCreation","onClick","updatedData","filter","current","handleDelete","MainApp","userAddForm","searchUser","setSearchUser","searchEmail","setSearchEmail","searchTelephone","setSearchTelephone","setData","startsWith","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.22eb653d.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport './UserAdd.css';\r\nimport { uniqueId } from 'lodash';\r\n\r\nfunction UserEdit(props) {\r\n\r\n    const setUserAddForm = props.setUserAddForm;\r\n    const updateData = props.updateData;\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [fullName, setFullName] = useState('');\r\n    const [telephone, setTelephone] = useState('');\r\n    const [userStatus, setUserStatus] = useState('Client');\r\n\r\n    const [emailValid, setEmailValid] = useState(true);\r\n    const [passwordValid, setPasswordValid] = useState(true);\r\n    const [telephoneValid, setTelephoneValid] = useState(true);\r\n\r\n    const emailRegExp = /^[A-Z0-9._%+-]+@[A-Z0-9-]+.+.[A-Z]{2,4}$/i;\r\n    const passwordRegExp = /[0-9a-zA-Z]{6,}/;\r\n    const telephoneRegExp = /^((8|\\+7)[\\- ]?)?(\\(?\\d{3}\\)?[\\- ]?)?[\\d\\- ]{7,10}$/;\r\n\r\n    const handleChangeEmail = (e) => {\r\n        setEmail(e.target.value);\r\n        if (emailRegExp.test(e.target.value)) {\r\n            setEmailValid(true);\r\n        }\r\n    }\r\n\r\n    const handleChangePassword = (e) => {\r\n        setPassword(e.target.value);\r\n        if (passwordRegExp.test(e.target.value)) {\r\n            setPasswordValid(true);\r\n        }\r\n    }\r\n\r\n    const handleChangeTelephone = (e) => {\r\n        setTelephone(e.target.value);\r\n        if (telephoneRegExp.test(e.target.value) || e.target.value === '') {\r\n            setTelephoneValid(true);\r\n        }\r\n    }\r\n\r\n    const isInvalid = () => {\r\n        const validEmail = emailRegExp.test(email);\r\n        const validPassword = passwordRegExp.test(password);\r\n        const validTelephone = telephoneRegExp.test(telephone) || telephone === '';\r\n\r\n        if (!validEmail) {\r\n            setEmailValid(false);\r\n        }\r\n        if (!validPassword) {\r\n            setPasswordValid(false);\r\n        }\r\n        if (!validTelephone) {\r\n            setTelephoneValid(false);\r\n        }\r\n        if (!validEmail || !validPassword || !validTelephone) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (isInvalid()) {\r\n            return;\r\n        }\r\n\r\n        if (localStorage.getItem('users') === null) {\r\n            const initData = JSON.stringify([{\r\n                id: uniqueId(), 'email': email.trim(), 'password': password.trim(),\r\n                'fullName': fullName.trim(), 'telephone': telephone.trim(), 'userStatus': userStatus,\r\n                'dateCreation': new Date().toLocaleString(), 'dateChanged': 'Не изменялась'\r\n            }]);\r\n            localStorage.setItem('users', initData);\r\n            updateData();\r\n        } else {\r\n            const newData = JSON.parse(localStorage.getItem('users'));\r\n            newData.push({\r\n                id: uniqueId(), 'email': email.trim(), 'password': password.trim(),\r\n                'fullName': fullName.trim(), 'telephone': telephone.trim(), 'userStatus': userStatus,\r\n                'dateCreation': new Date().toLocaleString(), 'dateChanged': 'Не изменялась'\r\n            });\r\n            localStorage.setItem('users', JSON.stringify(newData));\r\n            updateData();\r\n        }\r\n        setUserAddForm(false);\r\n    }\r\n\r\n    return (\r\n        <form className='addForm' onSubmit={handleSubmit}>\r\n            <label htmlFor='addEmail'>Электронный адрес:</label>\r\n            <input id='addEmail' className={emailValid ? '' : 'invalid'} type='email' required onChange={handleChangeEmail}></input>\r\n            {emailValid ? '' : <div className='errorMsg'>Неверный формат email!</div>}\r\n            <label htmlFor='addPassword'>Пароль</label>\r\n            <input id='addPassword' className={passwordValid ? '' : 'invalid'} type='text' required onChange={handleChangePassword}></input>\r\n            {passwordValid ? '' : <div className='errorMsg'>Неверный формат пароля!</div>}\r\n            <label htmlFor='addFullname'>ФИО</label>\r\n            <input id='addFullname' type='text' onChange={(e) => setFullName(e.target.value)}></input>\r\n            <label htmlFor='addTelephone'>Телефон</label>\r\n            <input id='addTelephone' className={telephoneValid ? '' : 'invalid'} type='tel' onChange={handleChangeTelephone}></input>\r\n            {telephoneValid ? '' : <div className='errorMsg'>Неверный формат телефона!</div>}\r\n            <label htmlFor='addStatus'>Статус пользовтеля:</label>\r\n            <select id='addStatus' onChange={(e) => setUserStatus(e.target.value)}>\r\n                <option value='Client'>Client</option>\r\n                <option value='Partner'>Partner</option>\r\n                <option value='Admin'>Admin</option>\r\n            </select>\r\n            {<button className='btnAdd' type='submit'>Добавить</button>}\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default UserEdit;\r\n","import './UserEdit.css';\r\nimport React, { useState } from 'react';\r\n\r\nfunction UserEdit(props) {\r\n\r\n    const updateData = props.updateData;\r\n    const data = props.data;\r\n\r\n    const [email, setEmail] = useState(data.email);\r\n    const [password, setPassword] = useState(data.password);\r\n    const [fullName, setFullName] = useState(data.fullName);\r\n    const [telephone, setTelephone] = useState(data.telephone);\r\n    const [userStatus, setUserStatus] = useState(data.userStatus);\r\n\r\n    const [emailValid, setEmailValid] = useState(true);\r\n    const [passwordValid, setPasswordValid] = useState(true);\r\n    const [telephoneValid, setTelephoneValid] = useState(true);\r\n\r\n    const emailRegExp = /^[A-Z0-9._%+-]+@[A-Z0-9-]+.+.[A-Z]{2,4}$/i;\r\n    const passwordRegExp = /[0-9a-zA-Z]{6,}/;\r\n    const telephoneRegExp = /^((8|\\+7)[\\- ]?)?(\\(?\\d{3}\\)?[\\- ]?)?[\\d\\- ]{7,10}$/;\r\n\r\n    const handleChangeEmail = (e) => {\r\n        setEmail(e.target.value);\r\n        if (emailRegExp.test(e.target.value)) {\r\n            setEmailValid(true);\r\n        }\r\n    }\r\n\r\n    const handleChangePassword = (e) => {\r\n        setPassword(e.target.value);\r\n        if (passwordRegExp.test(e.target.value)) {\r\n            setPasswordValid(true);\r\n        }\r\n    }\r\n\r\n    const handleChangeTelephone = (e) => {\r\n        setTelephone(e.target.value);\r\n        if (telephoneRegExp.test(e.target.value) || e.target.value === '') {\r\n            setTelephoneValid(true);\r\n        }\r\n    }\r\n\r\n    const isInvalid = () => {\r\n        const validEmail = emailRegExp.test(email);\r\n        const validPassword = passwordRegExp.test(password);\r\n        const validTelephone = telephoneRegExp.test(telephone) || telephone === '';\r\n\r\n        if (!validEmail) {\r\n            setEmailValid(false);\r\n        }\r\n        if (!validPassword) {\r\n            setPasswordValid(false);\r\n        }\r\n        if (!validTelephone) {\r\n            setTelephoneValid(false);\r\n        }\r\n        if (!validEmail || !validPassword || !validTelephone) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (isInvalid()) {\r\n            return;\r\n        }\r\n\r\n        const newData = JSON.parse(localStorage.getItem('users'));\r\n        newData.map(curr => {\r\n            if (curr.id === data.id) {\r\n                curr.email = email.trim();\r\n                curr.password = password.trim();\r\n                curr.fullName = fullName.trim();\r\n                curr.telephone = telephone.trim();\r\n                curr.userStatus = userStatus;\r\n                curr.dateChanged = new Date().toLocaleString();\r\n            }\r\n        });\r\n        localStorage.setItem('users', JSON.stringify(newData));\r\n        updateData();\r\n    }\r\n\r\n    return (\r\n        <form className='userEditForm' onSubmit={handleSubmit}>\r\n            <label htmlFor='email'>Электронный адрес:</label>\r\n            <input id='email' type='email' className={emailValid ? '' : 'invalid'} required value={email} onChange={handleChangeEmail}></input>\r\n            {emailValid ? '' : <div className='errorMsg'>Неверный формат email!</div>}\r\n            <label htmlFor='pass'>Пароль:</label>\r\n            <input id='pass' type='text' className={passwordValid ? '' : 'invalid'} required value={password} onChange={handleChangePassword}></input>\r\n            {passwordValid ? '' : <div className='errorMsg'>Неверный формат пароля!</div>}\r\n            <label htmlFor='fullname'>ФИО:</label>\r\n            <input id='fullname' type='text' value={fullName} onChange={(e) => setFullName(e.target.value)}></input>\r\n            <label htmlFor='telephone'>Телефон:</label>\r\n            <input id='telephone' type='tel' className={telephoneValid ? '' : 'invalid'} value={telephone} onChange={handleChangeTelephone}></input>\r\n            {telephoneValid ? '' : <div className='errorMsg'>Неверный формат телефона!</div>}\r\n            <label htmlFor='status'>Статус пользователя:</label>\r\n            <select id='status' value={userStatus} onChange={(e) => setUserStatus(e.target.value)}>\r\n                <option value='Client'>Client</option>\r\n                <option value='Partner'>Partner</option>\r\n                <option value='Admin'>Admin</option>\r\n            </select>\r\n            {<button type='submit' className='btnSave'>Сохранить</button>}\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default UserEdit;\r\n","import React, { useState } from 'react';\r\nimport UserEdit from './UserEdit';\r\nimport './User.css';\r\n\r\nfunction User(props) {\r\n\r\n    const updateData = props.updateData;\r\n    const data = props.data;\r\n\r\n    const [redactState, setRedactState] = useState(false);\r\n\r\n    function handleDelete(id) {\r\n        const updatedData = JSON.stringify(JSON.parse(localStorage.getItem('users')).filter(current => current.id !== id));\r\n        localStorage.setItem('users', updatedData);\r\n        updateData();\r\n    }\r\n\r\n    if (redactState) {\r\n        return <UserEdit updateData={updateData} data={data} />\r\n    }\r\n\r\n    return (\r\n        <div className='user'>\r\n            <ul>\r\n                <li>Электронный адрес: {data.email}</li>\r\n                <li>Пароль: {data.password}</li>\r\n                <li>ФИО: {data.fullName}</li>\r\n                <li>Телефон: {data.telephone}</li>\r\n                <li>Статус пользователя: {data.userStatus}</li>\r\n                <li>Дата создания: {data.dateCreation}</li>\r\n                <li>Дата изменения: {data.dateChanged}</li>\r\n            </ul>\r\n            <button className='btnDelete' onClick={() => handleDelete(data.id)}>Удалить</button>\r\n            <button className='btnChange' onClick={() => setRedactState(!redactState)}>Редактировать</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default User;\r\n","import './MainApp.css';\r\nimport UserAdd from './UserAdd.js';\r\nimport User from './User';\r\nimport React, { useState } from 'react';\r\nimport { uniqueId } from 'lodash';\r\n\r\n\r\nfunction MainApp() {\r\n    const [userAddForm, setUserAddForm] = useState(false);\r\n    const [searchUser, setSearchUser] = useState('All');\r\n    const [searchEmail, setSearchEmail] = useState('');\r\n    const [searchTelephone, setSearchTelephone] = useState('');\r\n\r\n    const [data, setData] = useState(JSON.parse(localStorage.getItem('users')));\r\n\r\n    function updateData() {\r\n        setData(JSON.parse(localStorage.getItem('users')));\r\n    }\r\n\r\n    return (\r\n        <div className='mainApp'>\r\n            <section className='addSection'>\r\n                <button className={userAddForm ? 'btnClose' : 'btnAdd'} onClick={() => setUserAddForm(!userAddForm)}>\r\n                    {userAddForm ? 'Закрыть' : 'Добавить пользователя'}\r\n                </button>\r\n                {userAddForm ? <UserAdd updateData={updateData} setUserAddForm={setUserAddForm} /> : ''}\r\n            </section>\r\n            <section className='searhSection'>\r\n                <label htmlFor='searhStatus'>Фильтрация по статусу:</label>\r\n                <select id='searhStatus' onChange={(e) => setSearchUser(e.target.value)}>\r\n                    <option>All</option>\r\n                    <option>Client</option>\r\n                    <option>Partner</option>\r\n                    <option>Admin</option>\r\n                </select>\r\n                <label htmlFor='searchEmail'>Поиск по Email:</label>\r\n                <input id='searchEmail' type='text' onChange={(e) => setSearchEmail(e.target.value)} />\r\n                <label htmlFor='searchTelephone'>Поиск по телефону:</label>\r\n                <input id='searchTelephone' type='text' onChange={(e) => setSearchTelephone(e.target.value)} />\r\n            </section>\r\n            {data !== null ? data.filter(curr => curr.email.startsWith(searchEmail) && curr.telephone.startsWith(searchTelephone) &&\r\n                (searchUser === 'All' || curr.userStatus === searchUser))\r\n                .map(current => <User key={uniqueId()} data={current} updateData={updateData} />) : ''}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MainApp;\r\n","import './App.css';\nimport MainApp from './Components/MainApp'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Каталог пользователей</h1>\n      </header>\n      <main>\n        <MainApp />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}